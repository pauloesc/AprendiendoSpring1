<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--  paquete a escanear en busca de componentes -->
	
	<!-- En este caso, el atributo base-package está establecido en "es.pildoras.spring.mvc",
	lo que significa que Spring escaneará ese paquete en busca de clases anotadas con
	anotaciones específicas de Spring, como @Component, @Controller, @Service o @Repository. -->
	
	<context:component-scan base-package="paqueteProyecto" />

	<mvc:annotation-driven/>

	<!-- Configuracion del view resolver-->
	<!-- class="org.springframework.web.servlet.view.InternalResourceViewResolver":
	Especifica la clase que se utilizará como implementación del ViewResolver.
	En este caso, se está utilizando InternalResourceViewResolver, que es un ViewResolver
	proporcionado por Spring para resolver las vistas internas. -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/vista/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- location indica donde estan los recursos -->
	<!-- mapping indica que todas las solicitudes que comienzan con "/recursoss/" 
	serán manejadas por este controlador de recursos. -->
	
	<!-- ChatGPT: Cuando una solicitud llega a la aplicación con una URL que coincide con el patrón
	definido en mapping, el controlador de recursos de Spring MVC manejará la solicitud y
	buscará el recurso en la ubicación física especificada en location, devolviéndolo al navegador. -->
	<mvc:resources location="/recursoss/" mapping="/url_Recursos/**"></mvc:resources>

</beans>





